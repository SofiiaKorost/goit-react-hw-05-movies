{"version":3,"file":"static/js/881.25fccbf0.chunk.js","mappings":"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","sources":["API/apiMovies.js","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst key = '1ee59e4f084b656977a658220376704a';\n\nexport async function fetchTrending() {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${key}`)\n  const response = data.results;\n  return response;\n}\n\nexport async function fetchMoviesWithQuery(searchQuery) {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${key}&language=en-US&page=1&query=${searchQuery}`\n  );\n  return data.results;\n}\n\nexport async function fetchMovieDetails(id) {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${key}&language=en-US`\n  );\n  return data;\n}\n\nexport async function fetchCast(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${key}&language=en-US`\n  );\n\n  return data.cast;\n}\n\nexport async function fetchReviews(id) {\n    const { data } = await axios.get(\n        `/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n    );\n  return data.results;\n}","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__8BnEE\",\"movieLink\":\"MoviesList_movieLink__QlD4H\",\"movieImg\":\"MoviesList_movieImg__bm-8+\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\"};","import { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport style from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={style.movieList}>\n      {movies &&\n        movies.map(({ id, poster_path, title }) => (\n          <Link\n            to={`/movies/${id}`}\n            key={id}\n            state={{ from: location }}\n            className={style.movieLink}\n          >\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={title}\n              className={style.movieImg}\n            />\n            <h3 className={style.movieTitle}>{title}</h3>\n          </Link>\n        ))}\n    </ul>\n  );\n};\nexport default MoviesList;","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Movies_box__xiWBb\",\"input\":\"Movies_input__KrUqs\",\"btn\":\"Movies_btn__TlfBQ\",\"moviesText\":\"Movies_moviesText__FXtLE\"};","import { BiSearchAlt } from 'react-icons/bi';\nimport { useState, useEffect } from 'react';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport { fetchMoviesWithQuery } from '../../API/apiMovies';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { IconContext } from 'react-icons';\nimport style from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchQuery(\n      e.currentTarget.elements.searchQuery.value.toLowerCase().trim()\n    );\n    setSearchParams({\n      query: e.currentTarget.elements.searchQuery.value.toLowerCase().trim(),\n    });\n  };\n\n  console.log(searchParams);\n  const currentQuery = searchParams.get('query');\n  console.log(currentQuery);\n\n  useEffect(() => {\n    if (!currentQuery) {\n      console.log('nety');\n    }\n  }, [currentQuery]);\n\n  useEffect(() => {\n    if (searchQuery !== '') {\n      const getMovieBySearch = async () => {\n        try {\n          const response = await fetchMoviesWithQuery(searchQuery);\n          console.log(response);\n          setMovies(response);\n        } catch (error) {\n          setError(error.message);\n          console.log(error.message);\n        }\n      };\n      getMovieBySearch();\n    } else if (currentQuery) {\n      const getMovieBySearch = async () => {\n        try {\n          const response = await fetchMoviesWithQuery(currentQuery);\n          console.log(response);\n          setMovies(response);\n        } catch (error) {\n          setError(error.message);\n          console.log(error.message);\n        }\n      };\n      getMovieBySearch();\n    }\n\n    return;\n  }, [searchQuery, currentQuery]);\n\n  return (\n    <>\n      <form className={style.box} onSubmit={handleSubmit}>\n        <input\n          className={style.input}\n          name=\"searchQuery\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search...\"\n        />\n        <button type=\"submit\" className={style.btn}>\n          <IconContext.Provider\n            value={{\n              color: 'black',\n              size: '35',\n              className: 'global-class-name',\n            }}\n          >\n            <div>\n              <BiSearchAlt />\n            </div>\n          </IconContext.Provider>\n        </button>\n      </form>\n      {!error ? (\n        <MoviesList movies={movies} location={location} />\n      ) : (\n        <p className={style.moviesText}>No results found for `{searchQuery}`</p>\n      )}\n    </>\n  );\n};\nexport default Movies;"],"names":["axios","key","fetchTrending","data","response","results","fetchMoviesWithQuery","searchQuery","fetchMovieDetails","id","fetchCast","cast","fetchReviews","movies","location","useLocation","className","style","map","poster_path","title","to","state","from","src","alt","useState","setSearchQuery","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","console","log","currentQuery","get","useEffect","getMovieBySearch","message","onSubmit","e","preventDefault","currentTarget","elements","value","toLowerCase","trim","query","name","type","autoComplete","autoFocus","placeholder","color","size","MoviesList"],"sourceRoot":""}